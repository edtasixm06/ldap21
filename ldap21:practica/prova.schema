# prova.schema
#
# x-foto
# x-descripcion
# x-documento
# x-vacuna
# x-grito
# x-raza
# x-edad
# x-localidad
#------------------------

attributetype ( 1.1.2.1.1 NAME 'x-foto'
	DESC 'foto del macaco'		
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.28
	)

attributetype ( 1.1.2.1.2 NAME 'x-descripcion'
	DESC 'descripcion del macaco'
	EQUALITY caseIgnoreMatch
	SUBSTR caseIgnoreSubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
	)

attributetype ( 1.1.2.1.3 NAME 'x-documento'
	DESC 'pdf del macaco'
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.5
	SINGLE-VALUE	
	)

attributetype ( 1.1.2.1.4 NAME 'x-grito'
	DESC 'grito del macaco'
	EQUALITY OctetStringMatch
	USAGE UserApplications
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.40
	)	

attributetype ( 1.1.2.1.5 NAME 'x-vacuna'
	DESC 'true/false esta vacunado'
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.7
	SINGLE-VALUE
	)

attributetype ( 1.1.2.1.6 NAME 'x-raza'
	DESC 'Raza del animal'
	EQUALITY caseIgnoreMatch
	SUBSTR caseIgnoreSubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
	SINGLE-VALUE	
	)

attributetype ( 1.1.2.1.7 NAME 'x-localidad'
	DESC 'Localidad de origen del animal'
	EQUALITY caseIgnoreMatch
	SUBSTR caseIgnoreSubstringsMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
	)

attributetype ( 1.1.2.1.8 NAME 'x-edad'
	DESC 'Edad animal int'
	EQUALITY integerMatch
	ORDERING integerOrderingMatch
	SYNTAX 1.3.6.1.4.1.1466.115.121.1.27
	SINGLE-VALUE )
	)

objectclass ( 1.1.2.2.1 NAME 'x-macaco'
	DESC 'macacos facheros'
	SUP inetOrgPerson
	STRUCTURAL
	MUST ( x-foto $ x-documento $ x-grito )
	MAY ( x-descripcion )
	)
 
objectclass ( 1.1.2.2.2 NAME 'x-animal'
	DESC 'Animales'
	SUP TOP
	AUXILIARY
	MUST ( x-raza )
	MAY ( x-localidad $ x-edad )
	)
